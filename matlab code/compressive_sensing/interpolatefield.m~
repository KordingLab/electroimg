function [Frec,whichsamp,Err] = interpolatefield(F0,numsamp)

N = numel(F0);
whichsamp = randi(N,round(numsamp*N),1);
ydata = F0(whichsamp);

stacksz = size(F0);
Frec = solveL1problem(ydata,whichsamp,stacksz);
Err = norm(Frec(:)-F0(:))./norm(F0(:));

end

function Frec = solveL1problem(ydata,whichsamp,stacksz)

for i=1:length(stacksz)
    Dict{i} = dctmtx(stacksz(i));
end

cvx_precision medium

if length(Dict)==2
    n1 = stacksz(1);
    n2 = stacksz(2);

    cvx_begin
        variable Frec(n1,n2)
        coef = Dr*Frec*Dc';
        errs = (ydata - Frec(whichsamp)).^2;
        minimize(norm(coef(:),1))
        subject to
        errs<errtol
    cvx_end

elseif length(Dict)==3
    
    n1 = stacksz(1);
    n2 = stacksz(2);
    n3 = stacksz(3);

    for i=1:ndim
        a=reshape(dct(reshape(a,siz(1),[]),ww{i},ind{i}), siz); % run dct along vectors (1st dimension)
        siz=[siz(2:end) siz(1)];                   % circular shift of size array by 1
        a=shiftdim(a,1);                           % circular shift dimensions by 1
    end
    
    cvx_begin
        variable Frec(n1,n2,n3)
        for i=1:n3
            coef1(:,:,i) = Dr*Frec*Dc';
        end
        errs = (ydata - Frec(whichsamp)).^2;
        minimize(norm(coef(:),1))
        subject to
        errs<errtol
    cvx_end
    
    
end


end


